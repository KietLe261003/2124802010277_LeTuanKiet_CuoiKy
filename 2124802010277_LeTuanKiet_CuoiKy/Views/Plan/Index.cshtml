
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .calendar {
        border: 1px solid #ccc;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .days {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
    }

    .day {
        border: 1px solid #ccc;
        padding: 10px;
        text-align: center;
    }

    .today {
        background-color: #4CAF50;
        color: white;
        font-weight: bold;
    }
</style>
<div class="calendar">
    <div class="header">
        <button onclick="prevMonth()">❮</button>
        <span id="currentMonth">December 2023</span>
        <button onclick="nextMonth()">❯</button>
    </div>
    <div class="days" id="calendarDays">
        <input type="text" style="width: 100%; height: 100%"/>
    </div>
</div>

<script>
    let currentMonth = new Date().getMonth();
    let currentYear = new Date().getFullYear();

    // Function to generate calendar days
    function generateCalendarDays() {
        const calendarDays = document.getElementById('calendarDays');
        calendarDays.innerHTML = '';

        const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
        const startDate = 1; // You can set the starting date dynamically
        const currentDate = new Date().getDate();

        for (let i = startDate; i <= daysInMonth; i++) {
            const dayElement = document.createElement('div');
            dayElement.classList.add('day');
            if (currentYear === new Date().getFullYear() && currentMonth === new Date().getMonth() && i === currentDate) {
                dayElement.classList.add('today');
            }

            // Add a click event listener to each day
            dayElement.addEventListener('click', function () {
                makeEditable(this);
            });

            dayElement.textContent = i;
            calendarDays.appendChild(dayElement);
        }
    }

    // Function to update the current month and year in the header
    function updateHeader() {
        document.getElementById('currentMonth').textContent = `${new Date(currentYear, currentMonth).toLocaleString('en-US', { month: 'long' })} ${currentYear}`;
    }

    // Function to go to the previous month
    function prevMonth() {
        currentMonth -= 1;
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear -= 1;
        }
        updateHeader();
        generateCalendarDays();
    }

    // Function to go to the next month
    function nextMonth() {
        currentMonth += 1;
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear += 1;
        }
        updateHeader();
        generateCalendarDays();
    }

    // Function to make a day editable
    function makeEditable(dayElement) {
        dayElement.contentEditable = true;
        dayElement.focus();
    }

    // Call the function to generate calendar days
    generateCalendarDays();
</script>